use.std::crypto::hashes::blake3
use.std::sys

begin
    # Push the number of iterations on the stack, and assess if we should loop
    adv_push.1 dup neq.0
    # => [0 or 1, num_iters_left, HASH_INPUTS_1, HASH_INPUTS_2]

    while.true
        # Move loop counter down
        movdn.8
        # => [HASH_INPUTS_1, HASH_INPUTS_2, num_iters_left]

        # Execute blake3 hash function
        exec.blake3::hash_1to1
        # => [HASH_INPUTS_1', HASH_INPUTS_2', num_iters_left]

        # Decrement counter, and check if we loop again
        movup.8 sub.1 dup neq.0
        # => [0 or 1, num_iters_left - 1, HASH_INPUTS_1', HASH_INPUTS_2']
    end

    # Drop counter
    drop

    # Truncate stack to make constraints happy
    exec.sys::truncate_stack
end
