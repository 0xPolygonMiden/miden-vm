begin
    # push the root of the Partial Merkle Tree on the stack
    push.0x82bb4d9a8e93582f1387611949703eecd8e4c74b904880f9c9c85f1fc1d7576d

    # get value at depth = 2, index = 0 from the Partial Merkle Tree; this value should be 20
    push.0.2
    mtree_get
    # check that returned value is equal to 20
    push.20.0.0.0
    assert_eqw

    dropw

    # push the root of the Sparse Merkle Tree on the stack
    push.0x444693b04b509c6b69d9ed981e67243342505f3b64aa3d45746211c180d11902

    # get value at depth = 64, index = 1 from the Sparse Merkle Tree; this value should be 21
    push.1.64
    mtree_get
    # check that returned value is equal to 21
    push.21.0.0.0
    assert_eqw

    dropw

    # push the root of the Merkle Tree on the stack
    push.0x0463f7d47758ad94b11dbf9675ffb7b331baa9c150d7fac6d784055c313eab0e

    # get value at depth = 2, index = 2 from the Merkle Tree; this value should be 22
    push.2.2
    mtree_get
    # check that returned value is equal to 22
    push.22.0.0.0
    assert_eqw

    dropw

end
